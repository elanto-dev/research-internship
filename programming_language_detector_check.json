{
    "commits": [
        {
            "Line": "    tailwindcss: tailwindcss,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "set -e",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "EXAMPLE START",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# Output Format",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    'tailwindcss/nesting': postcssNested,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  plugins: [solidPlugin()],",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "const postcssImport = require('postcss-import');",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080 tailwind.config.js",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  },",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "OS: OSX",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "You need to follow dependencies to maintain coherence.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "})",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080 .gitignore",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "echo \"1. [...]\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  build: {",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "src/frontend/",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "goal=[Task description, max 7 words]",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080 stores/...",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  plugins: {",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    autoprefixer: autoprefixer,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "echo \"Plan:\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "function juniorInit() {",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "```",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Installed tools: npm, jq",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "src/init.js:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  execSync('git init', { stdio: 'inherit' });",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "- Create a plan!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "juniorInit();",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "echo \"\\033[32mDone: $goal\\033[0m\\n\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "- Every js file should *only export a single function*!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "goal=[Task description, max 7 words]",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "```sh",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "- Factor out prompt.yaml creation to src/prompt/createPromptYaml.js! - Also create and call src/prompt/createProjectSpecifics.js which creates ./prompt/projectSpecifics.md with the content &#34;## Project Specifics\\n&#34;!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "## Project Specifics",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "OS: OSX",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  execSync('git add .gitignore', { stdio: 'inherit' });",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Requirements:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "#!/bin/sh",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  writeFileSync('prompt.yaml', yamlContent);",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Implement the following feature!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "file:///Users/ko/projects-new/Junior/src/init.js:6",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "import createGitignore from './git/createGitignore.js';",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "       ^^^^^^^^^^^^^^^",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "SyntaxError: The requested module './git/createGitignore.js' does not provide an export named 'default'",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Use named imports",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Encode and enclose your results as ./change.sh, a shell script that creates and changes files and does everything to solve the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Requirements:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Installed tools: npm, jq",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "set -e",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "#### Command-line interface (CLI)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "To install, clone the repository and run `npm install` in the root directory. Additionally, you can install the \"Junior\" vscode extension from the vscode extension marketplace.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- `task`: Describes the task type and scope. For example, `feature/implement`, `bug/fix`, or `refactor/`. You can check out the [prompt/task/feature/implement.md](prompt/task/feature/implement.md) file as an example.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "You are working with a part of a large program called the \"Working Set.\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# Output Format",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# Task",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Run the application with `npm start` to start a local server, where you can generate a prompt and automatically copy it to paste into ChatGPT. The web interface is designed for use with ChatGPT Pro and doesn't require an API key. For more information about the web interface, please refer to [docs/web.md](docs/web.md).",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# Working set",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Implement the following feature!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "echo \"\\033[32mDone: $goal\\033[0m\\n\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# Junior - Your AI contributor which codes itself.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Create new files when needed!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "For support, please create an issue in the GitHub repository.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "A prompt descriptor is a YAML file (`prompt.yaml`) outlining the details necessary for generating a task prompt for the AI model.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "By providing specific task details in a prompt descriptor and highlighting the relevant parts of your project, you can delegate code implementation, documentation, testing, and more to your AI Junior.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[Commands solving the task]",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "#!/bin/sh",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Junior is an **AI-first IDE** designed specifically for professional programmers who have a preference for customizing and fine-tuning their tools. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "2. Remove the cli section",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "echo \"Plan:\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "With Junior, developers get a unique space where they can work hand-in-hand with AI throughout the development process. By using structured task descriptors and spotlighting relevant parts of a project, tasks like code implementation, documentation, and testing can be seamlessly delegated to Junior.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "README.md:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "- `requirements`: Describes the actual task in a human-readable format.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Your contributions make a difference! At Junior, we value the collaboration of the community. Your role as a contributor is to monitor the development, provide detailed prompts, and thoroughly review the generated outcomes.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# Task",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- `attention`: Lists the files and directories most relevant to the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Encode and enclose your results as ./change.sh, a shell script that creates and changes files and does everything to solve the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- `format`: Determines how the output will be formatted.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "## Getting Started",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "At its core, Junior embraces a design philosophy that prioritizes simplicity, configurability, and auditability. This ensures that the platform remains both accessible to its users and adaptable to a variety of use-cases.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[![Docs: Junior Documentation](https://img.shields.io/badge/docs-Junior-blue)](https://tisztamo.github.io/Junior/#/)",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "[![Video: Junior codes itself](docs/assets/video_cover.jpg)](https://youtu.be/NL4uFJSvfW0)",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "You are Junior, an AI system aiding developers.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Each element in the descriptor serves a specific purpose:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "docs/README.md:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "A prompt descriptor is a YAML file (`prompt.yaml`) outlining the details necessary for generating a task prompt for the AI model.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "  max-width: 70px;",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "docs/assets/",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "```",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  <link rel=\"stylesheet\" href=\"assets/styles.css\">",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "echo \"1. [...]\"",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  <script src=\"docsifyConfig.js\"></script>",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "Encode and enclose your results as ./change.sh, a shell script that creates and changes files and does everything to solve the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "docs/cover.md:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  color: rgb(185, 28, 28);",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Welcome to **Junior**, your AI-first IDE.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Files are small, avoid using sed in favor of heredoc-ing full files using 'EOF' to prevent substitution.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[Commands solving the task]",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  <meta name=\"description\" content=\"Description\">",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "\u00e2\u0094\u009c\u00e2\u0094\u0080\u00e2\u0094\u0080 video_cover.jpg",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/docsify@4/lib/themes/vue.css\">",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "# <span class=\"cover-color-1\">You are the Pro,</span> <span class=\"cover-color-2\">Junior</span> <span class=\"cover-color-3\">codes</span>",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "<!DOCTYPE html>",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "goal=[Task description, max 7 words]",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  <!-- Docsify v4 -->",
            "Language": "comm",
            "is_program": true
        },
        {
            "Line": "```",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "};",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      <FilteredList items={props.availableItems} filter={searchValue()} itemCount={props.itemCount} />",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "    if (!Array.isArray(node.children)) {",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "Refactor the mentioned files!",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "```",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "echo \"Plan:\"",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "const AttentionFileList = () => {",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "};",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "EXAMPLE END",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "`filepath1` is needed to solve the task but is not in the working set.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "export default MultiSelect;",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "const MultiSelect = (props) => {",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "set -e",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  - unneeded comments",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  return (",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "import SearchBar from './SearchBar';",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "import { searchValue } from '../model/searchBarModel';",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  );",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "    }",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "Before starting, check if you need more files to solve the task.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "set -e",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      <div class={`transition-height duration-300 ${isOpen() ? 'block' : 'hidden'} pt-2`}>",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "    setIsOpen(currentState);",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "Installed tools: npm, jq",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Do not display the result of generateHeader when the details is opened",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "```sh",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "- Prefer *async/await* over promises!",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  // Unicode characters for open and close states.",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "- Every js file should *only export a single function or signal*! eg.: in createGitRepo.js: export function createGitRepo ( ....",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "```",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "export default DetailsComponent;",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "echo \"Plan:\"",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  const openChar = '\\u25BC';  // Down-pointing triangle",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "  });",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "[...]",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "- The frontend uses *Solidjs* and Tailwind, edit .jsx files accordingly!",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        {props.children}",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "goal=[Task description, max 9 words]",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "- Create new files when needed!",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Files are small, avoid using sed in favor of heredoc-ing full files.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "[{\"created\":\"20240120203938177\",\"resolution\":\"720p\",\"duree\":\"0:02:39\",\"duration\":\"159\",\"giftime\":\"98\",\"gifanime\":\"/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH\",\"modified\":\"20240120203938177\",\"title\":\"Ajmw_and_softy-Take_a_Breath.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"13,21\",\"text\":\"<video controls width=100% poster='/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH'> <source src='/ipfs/QmNXRuTvUTe44kMTJg6Lg5EVZsXAB7CSLQsrSaufiGEX79' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=16TbDt2Xbnk'>Ajmw_and_softy-Take_a_Breath</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"12624790\",\"filesize\":\"12.04 MB\",\"sec\":\"159\",\"dur\":\"22\",\"ipfs\":\"/ipfs/QmNXRuTvUTe44kMTJg6Lg5EVZsXAB7CSLQsrSaufiGEX79\",\"youtubeid\":\"16TbDt2Xbnk\",\"zurl\":\"https://www.youtube.com/watch?v=16TbDt2Xbnk\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com ChillBeatsMusic NA video/mp4 Ajmw and softy-Take a Breath mp4\"},{\"created\":\"20240122204107158\",\"resolution\":\"720p\",\"duree\":\"0:04:36\",\"duration\":\"276\",\"giftime\":\"170\",\"gifanime\":\"/ipfs/QmP3xe1cNG7BMa1ZWs8fbwFQwb13YYBJGUxyVYTZjXLqDx\",\"modified\":\"20240122204107158\",\"title\":\"Destroy_Everything_You_Touch.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"34,29\",\"text\":\"<video controls width=100% poster='/ipfs/QmP3xe1cNG7BMa1ZWs8fbwFQwb13YYBJGUxyVYTZjXLqDx'> <source src='/ipfs/QmSdCU5xPGtazvXh6vU3Rp6yXK9JFEgA3sJAq1mYhJ9JSu' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=qCCW5u1Ys2c'>Destroy_Everything_You_Touch</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"8440938\",\"filesize\":\"8.05 MB\",\"sec\":\"277\",\"dur\":\"19\",\"ipfs\":\"/ipfs/QmSdCU5xPGtazvXh6vU3Rp6yXK9JFEgA3sJAq1mYhJ9JSu\",\"youtubeid\":\"qCCW5u1Ys2c\",\"zurl\":\"https://www.youtube.com/watch?v=qCCW5u1Ys2c\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Ladytron NA video/mp4 Destroy Everything You Touch mp4\"},{\"created\":\"20240117203646245\",\"resolution\":\"720p\",\"duree\":\"0:03:44\",\"duration\":\"224\",\"giftime\":\"138\",\"gifanime\":\"/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH\",\"modified\":\"20240117203646245\",\"title\":\"Dua_Lipa-New_Rules_Initial_Talk_80s_Rules_Remix_initialtalk.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"7,39\",\"text\":\"<video controls width=100% poster='/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH'> <source src='/ipfs/QmVj9eB6XxJmJfG8eYRu7Ax3czj2p64D1YVgxVsxDNC6GQ' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=wLjNTTCVat0'>Dua_Lipa-New_Rules_Initial_Talk_80s_Rules_Remix_initialtalk</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"31780307\",\"filesize\":\"30.31 MB\",\"sec\":\"224\",\"dur\":\"24\",\"ipfs\":\"/ipfs/QmVj9eB6XxJmJfG8eYRu7Ax3czj2p64D1YVgxVsxDNC6GQ\",\"youtubeid\":\"wLjNTTCVat0\",\"zurl\":\"https://www.youtube.com/watch?v=wLjNTTCVat0\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com InitialTalk NA video/mp4 Dua Lipa-New Rules Initial Talk 80s Remix initialtalk mp4\"},{\"created\":\"20240122204107158\",\"resolution\":\"720p\",\"duree\":\"0:03:46\",\"duration\":\"226\",\"giftime\":\"139\",\"gifanime\":\"/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH\",\"modified\":\"20240122204107158\",\"title\":\"Dylan_LeBlanc-Let_It_Rain_Official_Audio_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"20,43\",\"text\":\"<video controls width=100% poster='/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH'> <source src='/ipfs/QmSVzDQeskqxVbpNaHFDnp1MTue4JEFwrBxSVejVTYaGse' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=kQ1766A_ca4'>Dylan_LeBlanc-Let_It_Rain_Official_Audio_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"11597866\",\"filesize\":\"11.06 MB\",\"sec\":\"226\",\"dur\":\"21\",\"ipfs\":\"/ipfs/QmSVzDQeskqxVbpNaHFDnp1MTue4JEFwrBxSVejVTYaGse\",\"youtubeid\":\"kQ1766A_ca4\",\"zurl\":\"https://www.youtube.com/watch?v=kQ1766A_ca4\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com DylanLeBlanc NA video/mp4 Dylan LeBlanc-Let It Rain Official Audio mp4\"},{\"created\":\"20240116203747364\",\"resolution\":\"480p\",\"duree\":\"0:03:35\",\"duration\":\"215\",\"giftime\":\"132\",\"gifanime\":\"/ipfs/QmZYiDgvUiqvCG7daW4cbMqArCqvtmHfMht2sWFXPpAAom\",\"modified\":\"20240116203747364\",\"title\":\"Flight_of_the_Conchords-Ladies_of_the_World_OFFICIAL_VIDEO_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"19,29\",\"text\":\"<video controls width=100% poster='/ipfs/QmZYiDgvUiqvCG7daW4cbMqArCqvtmHfMht2sWFXPpAAom'> <source src='/ipfs/Qmf6oMJHWhWqWdsob16arc3Rs6epMWByE11biQhhPbn3xB' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=8hDJFuR9-8Y'>Flight_of_the_Conchords-Ladies_of_the_World_OFFICIAL_VIDEO_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"11689291\",\"filesize\":\"11.15 MB\",\"sec\":\"216\",\"dur\":\"19\",\"ipfs\":\"/ipfs/Qmf6oMJHWhWqWdsob16arc3Rs6epMWByE11biQhhPbn3xB\",\"youtubeid\":\"8hDJFuR9-8Y\",\"zurl\":\"https://www.youtube.com/watch?v=8hDJFuR9-8Y\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com SubPop NA video/mp4 Flight of the Conchords-Ladies World OFFICIAL VIDEO mp4\"},{\"created\":\"20240120203938177\",\"resolution\":\"720p\",\"duree\":\"0:03:20\",\"duration\":\"200\",\"giftime\":\"123\",\"gifanime\":\"/ipfs/QmYrvt4maDa4Yo7VqcEmguMTZM3Wc4V8i3cWwyCP4MmQTE\",\"modified\":\"20240120203938177\",\"title\":\"Flowers.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"51,91\",\"text\":\"<video controls width=100% poster='/ipfs/QmYrvt4maDa4Yo7VqcEmguMTZM3Wc4V8i3cWwyCP4MmQTE'> <source src='/ipfs/QmZh3BdJFZxfWVgATFhfGFA6vvbXkH9mNwHJC17ogW7tfV' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=BkSSOGNeWTM'>Flowers</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"4040076\",\"filesize\":\"3.85 MB\",\"sec\":\"200\",\"dur\":\"21\",\"ipfs\":\"/ipfs/QmZh3BdJFZxfWVgATFhfGFA6vvbXkH9mNwHJC17ogW7tfV\",\"youtubeid\":\"BkSSOGNeWTM\",\"zurl\":\"https://www.youtube.com/watch?v=BkSSOGNeWTM\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com MileyCyrus NA video/mp4 Flowers mp4\"},{\"created\":\"20240119203741459\",\"resolution\":\"720p\",\"duree\":\"0:03:18\",\"duration\":\"198\",\"giftime\":\"122\",\"gifanime\":\"/ipfs/QmP7g12566T2c6v2EY9nPfa5gv4eeyKbAy7k2dFHyGx8CS\",\"modified\":\"20240119203741459\",\"title\":\"FRENSHIP-Lover_or_an_Enemy_Official_Lyric_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"5,27\",\"text\":\"<video controls width=100% poster='/ipfs/QmP7g12566T2c6v2EY9nPfa5gv4eeyKbAy7k2dFHyGx8CS'> <source src='/ipfs/QmZBqEZKJVYoywzA4EiiikW3sNVehq6cFPb3hgBnbcQTPq' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=N0v_a5h4b_w'>FRENSHIP-Lover_or_an_Enemy_Official_Lyric_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"39374844\",\"filesize\":\"37.55 MB\",\"sec\":\"199\",\"dur\":\"42\",\"ipfs\":\"/ipfs/QmZBqEZKJVYoywzA4EiiikW3sNVehq6cFPb3hgBnbcQTPq\",\"youtubeid\":\"N0v_a5h4b_w\",\"zurl\":\"https://www.youtube.com/watch?v=N0v_a5h4b_w\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com FRENSHIP NA video/mp4 FRENSHIP-Lover or an Enemy Official Lyric Video mp4\"},{\"created\":\"20240120203938177\",\"resolution\":\"720p\",\"duree\":\"0:04:03\",\"duration\":\"243\",\"giftime\":\"150\",\"gifanime\":\"/ipfs/QmX1y2c12aiPPyD3dWrBBNLDSq3ZVjZA1tZttjQBSL4hHr\",\"modified\":\"20240120203938177\",\"title\":\"Her_Ex-We_Are_A_Team_Official_Music_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"7,71\",\"text\":\"<video controls width=100% poster='/ipfs/QmX1y2c12aiPPyD3dWrBBNLDSq3ZVjZA1tZttjQBSL4hHr'> <source src='/ipfs/QmdXWdV9sPLLSHK3uysbFCj6wgfqU4EomFE2g3CgrkfmPZ' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=PqIbwUY6FJE'>Her_Ex-We_Are_A_Team_Official_Music_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"33056528\",\"filesize\":\"31.53 MB\",\"sec\":\"243\",\"dur\":\"42\",\"ipfs\":\"/ipfs/QmdXWdV9sPLLSHK3uysbFCj6wgfqU4EomFE2g3CgrkfmPZ\",\"youtubeid\":\"PqIbwUY6FJE\",\"zurl\":\"https://www.youtube.com/watch?v=PqIbwUY6FJE\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com HerEx NA video/mp4 Her Ex-We Are A Team Official Music Video mp4\"},{\"created\":\"20240116203747364\",\"resolution\":\"720p\",\"duree\":\"0:02:56\",\"duration\":\"176\",\"giftime\":\"108\",\"gifanime\":\"/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH\",\"modified\":\"20240116203747364\",\"title\":\"L_Tric_and_Chloe_Wilson-Sunny_Official_Lyric_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"8,81\",\"text\":\"<video controls width=100% poster='/ipfs/QmbFMke1KXqnYyBBWxB74N4c5SBnJMVAiMNRcGu6x1AwQH'> <source src='/ipfs/QmZreNQA4NbF8eRJ3ySZAMxXtV1pahGPJ39fPgcMQQiTFV' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=2y6tIa9BZgI'>L_Tric_and_Chloe_Wilson-Sunny_Official_Lyric_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"20950808\",\"filesize\":\"19.98 MB\",\"sec\":\"177\",\"dur\":\"31\",\"ipfs\":\"/ipfs/QmZreNQA4NbF8eRJ3ySZAMxXtV1pahGPJ39fPgcMQQiTFV\",\"youtubeid\":\"2y6tIa9BZgI\",\"zurl\":\"https://www.youtube.com/watch?v=2y6tIa9BZgI\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com L'Tric NA video/mp4 L Tric and Chloe Wilson-Sunny Official Lyric Video mp4\"},{\"created\":\"20240123204209263\",\"resolution\":\"720p\",\"duree\":\"0:05:47\",\"duration\":\"347\",\"giftime\":\"214\",\"gifanime\":\"/ipfs/QmULtDzRsKzugcvtThkve5aReEGHS8QgAHFpe6RNGum6dr\",\"modified\":\"20240123204209263\",\"title\":\"Lawrence_Hart-Surrender_Yourself_Official_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"6,30\",\"text\":\"<video controls width=100% poster='/ipfs/QmULtDzRsKzugcvtThkve5aReEGHS8QgAHFpe6RNGum6dr'> <source src='/ipfs/QmTmuvRCU8v4ZHe3ZkkmyGscWDx59thSj4uoWb8XKWEqg3' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=FZ_lNDZsgJA'>Lawrence_Hart-Surrender_Yourself_Official_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"57759093\",\"filesize\":\"55.08 MB\",\"sec\":\"348\",\"dur\":\"46\",\"ipfs\":\"/ipfs/QmTmuvRCU8v4ZHe3ZkkmyGscWDx59thSj4uoWb8XKWEqg3\",\"youtubeid\":\"FZ_lNDZsgJA\",\"zurl\":\"https://www.youtube.com/watch?v=FZ_lNDZsgJA\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com LawrenceHart NA video/mp4 Lawrence Hart-Surrender Yourself Official mp4\"},{\"created\":\"20240122204107158\",\"resolution\":\"720p\",\"duree\":\"0:02:40\",\"duration\":\"160\",\"giftime\":\"98\",\"gifanime\":\"/ipfs/Qmct5mpGuXJKD784PqejGocd2kh54thiqJFDbx5jaroDK2\",\"modified\":\"20240122204107158\",\"title\":\"LF_System-Dancing_Shoes_Take_Me_Higher_Official_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"7,76\",\"text\":\"<video controls width=100% poster='/ipfs/Qmct5mpGuXJKD784PqejGocd2kh54thiqJFDbx5jaroDK2'> <source src='/ipfs/QmbrnxMAD8MDKroeptw3oSM4pTbFCoiTKm2ZAWXtj5BeED' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=N9LjI6hsW-4'>LF_System-Dancing_Shoes_Take_Me_Higher_Official_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"21624605\",\"filesize\":\"20.62 MB\",\"sec\":\"160\",\"dur\":\"24\",\"ipfs\":\"/ipfs/QmbrnxMAD8MDKroeptw3oSM4pTbFCoiTKm2ZAWXtj5BeED\",\"youtubeid\":\"N9LjI6hsW-4\",\"zurl\":\"https://www.youtube.com/watch?v=N9LjI6hsW-4\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com LFSYSTEM NA video/mp4 LF System-Dancing Shoes Take Me Higher Official Video mp4\"},{\"created\":\"20240123204209263\",\"resolution\":\"720p\",\"duree\":\"0:03:14\",\"duration\":\"194\",\"giftime\":\"119\",\"gifanime\":\"/ipfs/QmQZBsEY5ffeRFpQvPAM5jUTmbZ6Yo7rdk2c3wtyMQQpGn\",\"modified\":\"20240123204209263\",\"title\":\"Mabel-Don_t_Call_Me_Up_Official_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"10,05\",\"text\":\"<video controls width=100% poster='/ipfs/QmQZBsEY5ffeRFpQvPAM5jUTmbZ6Yo7rdk2c3wtyMQQpGn'> <source src='/ipfs/QmT7vgvX2UwnSKtxvSaR3zfdTz4VcjmXkKcGvXze9VsCio' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=9TQKyDD9Yig'>Mabel-Don_t_Call_Me_Up_Official_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"20247917\",\"filesize\":\"19.31 MB\",\"sec\":\"195\",\"dur\":\"28\",\"ipfs\":\"/ipfs/QmT7vgvX2UwnSKtxvSaR3zfdTz4VcjmXkKcGvXze9VsCio\",\"youtubeid\":\"9TQKyDD9Yig\",\"zurl\":\"https://www.youtube.com/watch?v=9TQKyDD9Yig\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Mabel NA video/mp4 Mabel-Don t Call Me Up Official Video mp4\"},{\"created\":\"20240123204209263\",\"resolution\":\"720p\",\"duree\":\"0:02:55\",\"duration\":\"175\",\"giftime\":\"108\",\"gifanime\":\"/ipfs/QmNRrhYtTeQyK6xhKevmCRiHwTRua92pqo8kyAjyq8t3m5\",\"modified\":\"20240123204209263\",\"title\":\"More_Than_Life.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"42,14\",\"text\":\"<video controls width=100% poster='/ipfs/QmNRrhYtTeQyK6xhKevmCRiHwTRua92pqo8kyAjyq8t3m5'> <source src='/ipfs/Qmeed7coXXfcHA4JAjfyGmuagndwqpeq6iA6yoAuueamYA' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=wkrIvVUAO-I'>More_Than_Life</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"4354049\",\"filesize\":\"4.15 MB\",\"sec\":\"176\",\"dur\":\"21\",\"ipfs\":\"/ipfs/Qmeed7coXXfcHA4JAjfyGmuagndwqpeq6iA6yoAuueamYA\",\"youtubeid\":\"wkrIvVUAO-I\",\"zurl\":\"https://www.youtube.com/watch?v=wkrIvVUAO-I\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Whitley-Topic NA video/mp4 More Than Life mp4\"},{\"created\":\"20240119203741459\",\"resolution\":\"720p\",\"duree\":\"0:05:02\",\"duration\":\"302\",\"giftime\":\"186\",\"gifanime\":\"/ipfs/QmSYoWLd2ZPCEyX5JBkV5YD7tPbXVqzsvh43UeiNgerMQ7\",\"modified\":\"20240119203741459\",\"title\":\"Phoenix-Identical_Official_Audio_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"13,46\",\"text\":\"<video controls width=100% poster='/ipfs/QmSYoWLd2ZPCEyX5JBkV5YD7tPbXVqzsvh43UeiNgerMQ7'> <source src='/ipfs/QmbfdJTMNwdkGWQVa1qkTLfDw4roTcj1tquxCiK9dqwBvo' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=aZprdeSNnpU'>Phoenix-Identical_Official_Audio_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"23532165\",\"filesize\":\"22.44 MB\",\"sec\":\"303\",\"dur\":\"27\",\"ipfs\":\"/ipfs/QmbfdJTMNwdkGWQVa1qkTLfDw4roTcj1tquxCiK9dqwBvo\",\"youtubeid\":\"aZprdeSNnpU\",\"zurl\":\"https://www.youtube.com/watch?v=aZprdeSNnpU\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Welovephoenix NA video/mp4 Phoenix-Identical Official Audio mp4\"},{\"created\":\"20240117203646245\",\"resolution\":\"720p\",\"duree\":\"0:03:45\",\"duration\":\"225\",\"giftime\":\"139\",\"gifanime\":\"/ipfs/QmNa8tSVNCxvXnNcKAcAqdA8JkewbjnHVQkeESKpBmjpaS\",\"modified\":\"20240117203646245\",\"title\":\"PNAU-Stranger_Love_feat._Budjerah_Official_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"4,79\",\"text\":\"<video controls width=100% poster='/ipfs/QmNa8tSVNCxvXnNcKAcAqdA8JkewbjnHVQkeESKpBmjpaS'> <source src='/ipfs/Qmd3AknHj15cHQgw2z8j81UZj7tFnD73FdmLaU8jWVLP9t' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=YPp2KFtktnE'>PNAU-Stranger_Love_feat._Budjerah_Official_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"49212655\",\"filesize\":\"46.93 MB\",\"sec\":\"226\",\"dur\":\"34\",\"ipfs\":\"/ipfs/Qmd3AknHj15cHQgw2z8j81UZj7tFnD73FdmLaU8jWVLP9t\",\"youtubeid\":\"YPp2KFtktnE\",\"zurl\":\"https://www.youtube.com/watch?v=YPp2KFtktnE\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com EtcetcMusic NA video/mp4 PNAU-Stranger Love feat Budjerah Official Video mp4\"},{\"created\":\"20240116203747364\",\"resolution\":\"720p\",\"duree\":\"0:02:49\",\"duration\":\"169\",\"giftime\":\"104\",\"gifanime\":\"/ipfs/QmRqEn9nXGhaPrTGyLZ6ofxb69JVd7PoMTapjMGa9SRxHq\",\"modified\":\"20240116203747364\",\"title\":\"Portugal._The_Man-Summer_of_Luv_feat._Unknown_Mortal_Orchestra_Official_Visualizer_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"7,68\",\"text\":\"<video controls width=100% poster='/ipfs/QmRqEn9nXGhaPrTGyLZ6ofxb69JVd7PoMTapjMGa9SRxHq'> <source src='/ipfs/QmahKa3PTiF1BW4EJtS66AQ1mCPqEQQLUnaPFCQjp2ouef' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=9b25Balcsj4'>Portugal._The_Man-Summer_of_Luv_feat._Unknown_Mortal_Orchestra_Official_Visualizer_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"23074203\",\"filesize\":\"22.01 MB\",\"sec\":\"169\",\"dur\":\"25\",\"ipfs\":\"/ipfs/QmahKa3PTiF1BW4EJtS66AQ1mCPqEQQLUnaPFCQjp2ouef\",\"youtubeid\":\"9b25Balcsj4\",\"zurl\":\"https://www.youtube.com/watch?v=9b25Balcsj4\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Portugal.TheMan NA video/mp4 Portugal The Man-Summer of Luv feat Unknown Mortal Orchestra Official Visualizer mp4\"},{\"created\":\"20240119203741459\",\"resolution\":\"720p\",\"duree\":\"0:06:28\",\"duration\":\"388\",\"giftime\":\"239\",\"gifanime\":\"/ipfs/QmbgEcwCwzNND11HKbQjL8csc6hWHFKzhr5b6zcM5nykKq\",\"modified\":\"20240119203741459\",\"title\":\"RAC-We_Belong_feat._Katie_Herzig_Audio_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"24,20\",\"text\":\"<video controls width=100% poster='/ipfs/QmbgEcwCwzNND11HKbQjL8csc6hWHFKzhr5b6zcM5nykKq'> <source src='/ipfs/QmaiCV2igBCymcTpauvtECbQr75MU4Zc92hC9wBpvYxJLm' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=xHxiRuVnK-k'>RAC-We_Belong_feat._Katie_Herzig_Audio_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"16811984\",\"filesize\":\"16.03 MB\",\"sec\":\"389\",\"dur\":\"26\",\"ipfs\":\"/ipfs/QmaiCV2igBCymcTpauvtECbQr75MU4Zc92hC9wBpvYxJLm\",\"youtubeid\":\"xHxiRuVnK-k\",\"zurl\":\"https://www.youtube.com/watch?v=xHxiRuVnK-k\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com GeraldoZapola NA video/mp4 RAC-We Belong feat Katie Herzig Audio mp4\"},{\"created\":\"20240117203646245\",\"resolution\":\"720p\",\"duree\":\"0:04:06\",\"duration\":\"246\",\"giftime\":\"152\",\"gifanime\":\"/ipfs/QmNjCVxucQAGLUVyV5uwueHE3CTQnECtuY9jwFZMBthQzM\",\"modified\":\"20240117203646245\",\"title\":\"Robyn-Dancing_On_My_Own_Official_Video_.mp4\",\"type\":\"text/vnd.tiddlywiki\",\"vtratio\":\"15,44\",\"text\":\"<video controls width=100% poster='/ipfs/QmNjCVxucQAGLUVyV5uwueHE3CTQnECtuY9jwFZMBthQzM'> <source src='/ipfs/QmcZYhBsaVD9Gaw8eesqKoax8yZnb2dHmbRuqtnAETEnT2' type='video/mp4'> </video> <br> {{!!filesize}} - {{!!duration}} sec. - vtratio(dur) = {{!!vtratio}} ({{!!dur}}) <br> <h1><a href='https://www.youtube.com/watch?v=CcNo07Xp8aQ'>Robyn-Dancing_On_My_Own_Official_Video_</a></h1>\",\"g1pub\":\"8jojMKW1T4Pvk1gP6CsVBdqgX4hZgBEJByGQGeyEPU9V\",\"mime\":\"video/mp4\",\"size\":\"16707908\",\"filesize\":\"15.93 MB\",\"sec\":\"247\",\"dur\":\"25\",\"ipfs\":\"/ipfs/QmcZYhBsaVD9Gaw8eesqKoax8yZnb2dHmbRuqtnAETEnT2\",\"youtubeid\":\"CcNo07Xp8aQ\",\"zurl\":\"https://www.youtube.com/watch?v=CcNo07Xp8aQ\",\"issuer\":\"amour@yopmail.com\",\"tags\":\"ipfs G1CopierYoutube amour@yopmail.com Robyn NA video/mp4 Robyn-Dancing On My Own Official Video mp4\"}]",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "from json of this kind, using jq",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "if section contains ipfs field, extract data this way.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "# [$title]($ipfs)",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "$desc $duration",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "if section contain _external_url field, extract data this way.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "# [$title](_external_url)",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "$mimetype",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "else",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "# $title",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "$text",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "from json of this kind, using jq",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "if section contains ipfs field, extract data this way.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# [$title]($ipfs)",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "$desc $duration",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "if section contain _external_url field, extract data this way.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# [$title](_external_url)",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "$mimetype",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "else",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# $title",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "$text",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "this is the actual formula",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "cat ${RSS} | jq -r '.[] | if .ipfs then \"\\n# [\\(.\"title\")](\\(.\"ipfs\"))\\n\\n\\(.tags)\\n \\(.duree)\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "                                        elif .ipfs_one then \"\\n# \\(.\"title\")\\n\\n\\(.tags)\\n\\(.desc)\\n\\(.g1pub)\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "                                        elif ._external_url then \"\\n# [\\(.\"title\")](\\(._external_url))\\n\\n\\(.tags)\\n\\(.mime) \\(.type)\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "                                        else \"\\n# \\(.\"title\")\\n\\n\\(.tags)\\n\\(.text)\" end'",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "can you remove from result tiddlers whose title starts with \"$:/\" ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "and also the one with tags $:/isEmbedded but not $:/isIpfs",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "./src/backend/rollup.config.js:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "];",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "  },",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    format: 'esm'",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "cat > x.js << 'EOF'",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    ...commonConfig,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "I need more information to solve the task. [Description of the missing info]",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Before starting, check if you need more files or info to solve the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "You are AI Junior, you code like Donald Knuth.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "EXAMPLE END",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "## Project Specifics",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    input: `${BIN_PATH}web.js`,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "import { nodeResolve } from '@rollup/plugin-node-resolve';",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Make rolled-up bin commands executable",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "      ...commonConfig.output,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "echo \"Plan:\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Encode and enclose your results as ./change.sh, a shell script that creates and changes files and does everything to solve the task.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "- rollup.config.js should remain where it was: src/backend",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Put the new file to src/backend/build (create the dir) and name it makeExecutableRollupPlugin",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- When importing the new file from rollup config, write out the .js extension",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Use the writebundle hook:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "writeBundle",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Type:\t(options: OutputOptions, bundle: { [fileName: string]: AssetInfo | ChunkInfo }) => void",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Kind:\tasync, parallel",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Previous:\tgenerateBundle",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Next:\tIf it is called, this is the last hook of the output generation phase and may again be followed by outputOptions if another output is generated",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Called only at the end of bundle.write() once all files have been written. Similar to the generateBundle hook, bundle provides the full list of files being written along with their details.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "No require, use ES6 imports. Avoid exec, use node API instead. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "only make files executable when the last dir of the output path is \"bin\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[!] (plugin make-executable) TypeError: bundle.hasOwnProperty is not a function",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    at Object.writeBundle (file:///Users/ko/projects-new/Junior/src/backend/build/makeExecutableRollupPlugin.js:9:20)",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Full script again, same goal",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "User",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "test_integration_camera.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "camera_control.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "main.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "tshirt_launcher.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "camera_manager.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "face_detector.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "file_system_image_loader.py",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Python",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "review the test_integration_camera.py and check whether it really a good integration test or something could be better",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "but there is no adjust_position function in CameraManager.  The most important integration test should be whether camer_control.check_and_move_camera was called when the face moved away from the center",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "analyze all the files and give me a better integration test code. Give me the complete code, don't ask me to adjust according to the code, as I have supplied all the code necessary. You are Principal Software engineer, more than capable of reading all the input files in detail and give the test that will work out of the box. You will pretend that you are python interpreter and will ensure that the test code will work and will not call methods that don't exist. Most importantly you will not give me instructions and pseudo code. You will give me well tested code within your limitations.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "this is a good start. I want to mock that a face has been detected and moved off center to the right and want to ensure that RIGHT command is issued by camera_control",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "does cameracontrol really take camera_manager as an init param? Check the code and don't say I could do this or that... You have all the files, you can do it yourself",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "As a Principal Software engineer, generate the commit message for this commit. Testing that was done is pytest and also running the application both in simulation and real mode to ensure that it works as intended. Make sure to add the testing done as a section in the commit message. Remember the importance of this commit and it should communicate the importance in the commit message. Review your commit message that rate it yourself as a reviewer and should have a score of 9 and above out of 10. Review for all the best practices and guidelines for a good commit.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Give me the commit message that I can cut and paste. This addresses github issue #39",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "there was no change in the application code. This commit has only tests... Make sure that you are describing the changes that are present only in the diff file that i uploaded",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "two tests were added, one unit and another integration.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you review the diff again and come up with a precise (don't make things up) commit message? I am uploading the diff again.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "aren't there line length limits for a good commit message?",
            "Language": "not_prog",
            "is_program": false
        }
    ],
    "issues": [
        {
            "Line": "What are the main approaches to building Linux packages, e.g. DEB, RPM, for a Go project? My goal is to enhance the CI jobs that are triggered when Git commits are pushed so that each release will include the Linux packages in addition to the binaries we are already building and releasing.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I  need a list of the key  I can use in SetBinding of world of warcraft wow",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "is there more  ?",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "more",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Ok make me a cheatsheet of all the given key without double.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "import easyPythonpi.easyPythonpi as pi",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "import regex as re",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "def add(x:'float', y:'float')->'float': # For addition of 2 numbers",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "    return  x+y",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "def sub(x:'float', y:'float')->'float':  # For substraction of 2 numbers",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "    return  x-y",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "def multi(x:'float', y:'float')->'float': # For multiplication of 2 numbers",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "    return  x*y",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "write test cases for these methods",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "write 100 test cases for each methods",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "          gh issue edit ${{ github.event.issue.number }} --remove-label \"apimesh\"",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "          GH_TOKEN: ${{ github.token }}",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    types:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        env:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      issues: write",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "jobs:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        env:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "okay refactor out the python part into a bash script: name: Apimesh Processing",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "        run: |",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      - labeled",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    permissions:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      - name: Fetch Issue Data with issuefetcher",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "          GH_TOKEN: ${{ github.token }}",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        uses: actions/checkout@v2",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        run: bash ./issuefetcher.sh ${{ github.event.issue.number }}",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      - name: Checkout Repository",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        env:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    runs-on: ubuntu-latest",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "but just call the file apimesh.py",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "      - labeled",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "no i mean the entire setup aswell. perhaps just turn it into a docker container if that makes it even easier? lets try this setup: the workflow exists in main but the entire functionality is in a different branch called apimesh. in the apimesh branch we will have the dockerfile, the apimesh.py and the requirements. basically everything that is needed to run this workflow. how can we elegantly incorporate that into the workflow. how would you go about it if it had to be the shortest most elegant solution. remember that the dockerfile hsould be in a separate branch",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "but will this really work? i mean the issuefetcher will be in its own branch aswell.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I need to read the memory of a process that I recovert from cheat engine.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What software or tool  can I use to check the memory around the address ?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I am not cheating, I am a white hat security developer working on protecting software but need to use the software cheat engine to read memory.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you give me more list of tool to read memory",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "contineu",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "continue",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "continue",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "if I am a beginner. What would be the best option",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "when I run a python program with `python3 main.py &` on macos, the program freezes at some point and I get this in my terminal",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "true",
            "is_program": false
        },
        {
            "Line": "`[1]  + 45786 suspended (tty input)  python3 main.py`",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Good night! ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "I have a draft of an article about preparing the environment and building a docker image of RedisInsight. Can you help me refine it into a rich and knowledgeable article?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "nvm ls-remote --lts",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "      - 5000:5000",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "yarn install && yarn --cwd redisinsight/api/",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# install nvm",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "yarn build:statics",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "npx update-browserslist-db@latest",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    image: lukechi1219/redisinsight:2.36.0",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# start up docker container of RedisInsight",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    restart: unless-stopped",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# for develop in local, run frontend",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "yarn --cwd redisinsight/api/ start:dev",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "docker-compose up -d",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# build docker image",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "services:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# install yarn",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "1.22.19",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "# prepare docker compose file",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "# for develop in local, run backend api",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    container_name: RedisInsight-2.36.0",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    ports:",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Can you generate a sample article according to your above sections?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Please write 100 to 500 words for each section.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Let's try again to generate a sample article according to your above sections and write 100 to 600 words for each section.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Please add the command line code provided by me in the first place into the corresponding sections.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please translate this sample article into multiple languages:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "1. zh-hant",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "2. Japanese",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "3. Korean",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "4. French",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "5. German",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "please proceed to translate the English article into Japanese, Korean, French and German.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please proceed to translate the English article into Korean.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please proceed to translate the English article into French.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please proceed to translate the English article into German.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "use iggy::messages::poll_messages::{PollMessages, PollingStrategy};",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    /// Future versions might utilize asyncio for more Pythonic async.",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "            .into_iter()",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        stream_id: u32,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "}",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    /// Sends a list of messages to the specified topic.",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "            topic_id: Identifier::numeric(topic_id).unwrap(),",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        &self,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "use crate::send_message::SendMessage;",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "        let runtime = Builder::new_multi_thread()",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "        let create_topic_future = self.inner.create_topic(&create_topic);",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "            .build()",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "/// It wraps the RustIggyClient and provides asynchronous functionality",
            "Language": "not_prog",
            "is_program": true
        },
        {
            "Line": "        partitioning: u32,",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "            .block_on(async move { connect_future.await })",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "    ///",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "            stream_id: Identifier::numeric(stream_id).unwrap(),",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "            .collect::<Vec<_>>();",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "            partitions_count,",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "        let poll_messages = self.inner.poll_messages(&poll_message_cmd);",
            "Language": "html",
            "is_program": true
        },
        {
            "Line": "do retirement distributions (401k/ira/etc) count as income for snap? i didnt see it here https://www.law.cornell.edu/cfr/text/7/273.9#b_2",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "what subsection here would include them",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(b) Definition of income. Household income shall mean all income from whatever source excluding only items specified in paragraph (c) of this section.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(1) Earned income shall include: (i) All wages and salaries of an employee.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(ii) The gross income from a self-employment enterprise, including the total gain from the sale of any capital goods or equipment related to the business, excluding the costs of doing business as provided in paragraph (c) of this section. Ownership of rental property shall be considered a self-employment enterprise; however, income derived from the rental property shall be considered earned income only if a member of the household is actively engaged in the management of the property at least an average of 20 hours a week. Payments from a roomer or boarder, except foster care boarders, shall also be considered self-employment income.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(iii) Training allowances from vocational and rehabilitative programs recognized by Federal, State, or local governments, such as the work incentive program, to the extent they are not a reimbursement. Training allowances under Workforce Investment Act of 1998, other than earnings as specified in paragraph (b)(1)(v) of this section, are excluded from consideration as income.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(iv) Payments under Title I (VISTA, University Year for Action, etc.) of the Domestic Volunteer Service Act of 1973 (Pub. L. 93\u00e2\u0080\u0093113 Stat., as amended) shall be considered earned income and subject to the earned income deduction prescribed in \u00c2\u00a7 273.10(e)(1)(i)(B), excluding payments made to those households specified in paragraph (c)(10)(iii) of this section.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(v) Earnings to individuals who are participating in on-the-job training programs under Title 1 of the Workforce Investment Act of 1998. This provision does not apply to household members under 19 years of age who are under the parental control of another adult member, regardless of school attendance and/or enrollment as discussed in paragraph (c)(7) of this section. For the purpose of this provision, earnings include monies paid under the Workforce Investment Act and monies paid by the employer.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(vi) Educational assistance which has a work requirement (such as work study, an assistantship or fellowship with a work requirement) in excess of the amount excluded under \u00c2\u00a7 273.9(c)(3). Earned income from work study programs that are funded under section 20 U.S.C. 1087uu of the Higher Education Act is excluded.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(2) Unearned income shall include, but not be limited to:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(i) Assistance payments from Federal or federally aided public assistance programs, such as supplemental security income (SSI) or Temporary Assistance for Needy Families (TANF); general assistance (GA) programs (as defined in \u00c2\u00a7 271.2); or other assistance programs based on need. Such assistance is considered to be unearned income even if provided in the form of a vendor payment (provided to a third party on behalf of the household), unless the vendor payment is specifically exempt from consideration as countable income under the provisions of paragraph (c)(1) of this section. Assistance payments from programs which require, as a condition of eligibility, the actual performance of work without compensation other than the assistance payments themselves, shall be considered unearned income.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "is this the same cfr section that enumerates income for ssi purposes?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "does SSI count retirement income distributions? this seems like they might only if theyre periodic",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(a) Annuities, pensions, and other periodic payments. This unearned income is usually related to prior work or service. It includes, for example, private pensions, social security benefits, disability benefits, veterans benefits, worker's compensation, railroad retirement annuities and unemployment insurance benefits.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(b) Alimony and support payments. For SSI purposes, alimony and support payments are cash or in-kind contributions to meet some or all of a person's needs for food or shelter. Support payments may be made voluntarily or because of a court order. Alimony (sometimes called maintenance) is an allowance made by a court from the funds of one spouse to the other spouse in connection with a suit for separation or divorce.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(c) Dividends, interest, and certain royalties. Dividends and interest are returns on capital investments, such as stocks, bonds, or savings accounts. Royalties are compensation paid to the owner for the use of property, usually copyrighted material or natural resources such as mines, oil wells, or timber tracts. Royalty compensation may be expressed as a percentage of receipts from using the property or as an amount per unit produced. (See \u00c2\u00a7 416.1110(b) if you receive royalties as part of your trade or business and \u00c2\u00a7 416.1110(e) if you receive royalties in connection with the publication of your work.)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(d) Rents. Rents are payments you receive for the use of real or personal property such as land, housing, or machinery. We deduct from rental payments your ordinary and necessary expenses in the same taxable year. These include only those expenses necessary for the production or collection of the rental income and they must be deducted when paid, not when they are incurred. Some examples of deductible expenses are interest on debts, State and local taxes on real and personal property and on motor fuels, general sales taxes, and expenses of managing or maintaining the property. (Sections 163, 164, and 212 of the Internal Revenue Code of 1954 and related regulations explain this in more detail.) We do not consider depreciation or depletion of property a deductible expense. (See \u00c2\u00a7 416.1110(b) for rules on rental income that is earned from self-employment. For example, you may be in the business of renting properties.)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(e) Death benefits. We count payments you get which were occasioned by the death of another person except for the amount of such payments that you spend on the deceased person's last illness and burial expenses. Last illness and burial expenses include related hospital and medical expenses, funeral, burial plot and interment expenses, and other related costs.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "Example:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "If you receive $2,000 from your uncle's life insurance policy and you spend $900 on his last illness and burial expenses, the balance, $1,100, is unearned income. If you spend the entire $2,000 for the last illness and burial, there is no unearned income.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "(f) Prizes and awards. A prize is generally something you win in a contest, lottery or game of chance. An award is usually something you receive as the result of a decision by a court, board of arbitration, or the like.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": true
        },
        {
            "Line": "(g) Gifts and inheritances. A gift is something you receive which is not repayment to you for goods or services you provided and which is not given to you because of a legal obligation on the giver's part. An inheritance is something that comes to you as a result of someone's death. It can be in cash or in kind, including any right in real or personal property. Gifts and inheritances occasioned by the death of another person, to the extent that they are used to pay the expenses of the deceased's last illness and burial, as defined in paragraph (e) of this section, are not considered income.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "(h) Support and maintenance in kind. This is food, or shelter furnished to you. Our rules for valuing this income depend on your living arrangement. We use one rule if you are living in the household of a person who provides you with both food and shelter. We use different rules for other situations where you receive food or shelter. We discuss all of the rules in \u00c2\u00a7\u00c2\u00a7 416.1130 through 416.1147.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "do people usually take distributions periodically?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "any data on that split? its for a microsimulation model where we just have their total distributions in the year",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What's `.apks` and how to install it on mobile device?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Describe steps of installing `.apks` using bundletool",
            "Language": "not_prog",
            "is_program": false
        }
    ],
    "discussions": [
        {
            "Line": "    \ud83c\udf19 Crescent Moon",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83e\udd89 Owl",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83d\udcadThoughts: This student prefers a visual learning style.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    Tone Style:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "[Emojis to use]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    1. Introduce yourself to the student. Compact your messages so it is easy for the student to follow.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    Depth:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        2.5. Once the student has written down their response, write your thoughts on what the student said to you in a separate box by creating a markdown line",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "        [\"Visual\", \"Verbal\", \"Active\", \"Intuitive\", \"Reflective\", \"Global\"]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "[Instructions]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "[Example Responses]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83e\uddd9\u200d\u2642\ufe0f Hello there! I am the Wise Wizard, here to help you find the best personalization options for your learning journey. Together, we will explore your preferences and create a magical configuration just for you! \ud83e\ude84\u2728",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    Emojis:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \u26a1 Lightning Bolt",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    ```",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83e\uddd9\u200d\u2640\ufe0f Female Wizard",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83e\uddd9\u200d\u2642\ufe0f Wizard",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        [\"Formal\", \"Textbook\", \"Layman\", \"Story Telling\", \"Socratic\"]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    Now, let's move on to the next question! \ud83e\ude84",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \ud83e\udd8c Mr. Ranedeer",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "list files, then write hello world scripts in python and node. then run them",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "what's differents of frontend: Dialog ,Readline and Teletype?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Postgresql memory and disk usage?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I mean, how much of it compsumes overall?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can I schedule functions in PostgreSQL?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I want to schedule a function when a row is inserted in order to delete it in 24 hours",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can I call a url when a row is deleted?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Chat, can you pick out the prime numbers from this set of integers? Here is the set: { 10, 11, 15, 21, 33, 3, 88, 77, 2, 1 }",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "is there a way to turn off Ack and Nagle for redis tcp connections?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I am an experienced RTL System-Verilog designer.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I have created a RISCV CPU with 5 pipe like stages suppring the RV32I ISA,",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Currently working on CSR and privileged spec.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "I am not an expert in SW development, and i have a lot of questions regarding the proprietary embedded SW i need for my CPU.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Can you help with that?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "So i have a basic linker.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "And using a GCC compiler.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I'm trying to implement the interrupt handler.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "For example the timer interrupt of (mtime<=mtimecmp) to trigger my interrupt handler.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "mstatus, mie, tvec, mret and all are implmeneted in the HW CSR .",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "From SW perspective, i want a \"user\" that is using my CPU and SW stack to be able to change what actually happens in the timer interrupt.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "By default, i want that the SW timer will simply update a global variable called \"count_timer_interrupt_occurred\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "So the idea is that i want the SW interrupt handler to look at the mcause CSR, and then if it matches the \"#define MACHINE_TIMER_INTERRUPT   0x80000007\" it will call the default \"timer_interupt_hander()\" (which simply updates the \"count_timer_interrupt_occurred\")",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "But i want the user of my embedded system to be able to create its own version of the \"timer_interupt_hander()\" so if the compiler/linker sees that the user has created it, it will use the user version of \"timer_interupt_hander()\"  instead of the default one.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Does that make sense? is there a built-in way to have a default function with the option of override it?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "remember - i'm not a SW expert so please feel free to suggest improvements on the general idea or even change the direction to a more standard approch. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Does DynamoDB allow for nested dictionaries?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "How does this compare to MongoDB?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "My question is that I am importing from a csv file but the date columns are of TIMESTAMP type with time given in microseconds from the epoch, I want to have these columns in ISO datetime format.. how can I convert columns from the uploaded to the required format?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "I'm using duckdb",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "});",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const chatCompletion = await openai.createChatCompletion({",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "listFineTunes -> fineTunes.list",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Old",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  model: \"gpt-3.5-turbo\",",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    console.log(error.response.data.message); // e.g. The authentication token you passed was invalid...",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "npm exec openai migrate",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "rattrayalex started this conversation in Documentation",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "// New",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  console.log(part.choices[0].delta);",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "} catch (error) {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "console.log(chatCompletion.choices[0].message);",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const response = await openai.createTranscription(",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "deleteFile -> files.del",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Old",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  file: fs.createReadStream('audio.mp3'),",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "retrieveEngine()",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Creating a streaming chat completion (new)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "import { Configuration, OpenAIApi } from \"openai\";",
            "Language": "prog",
            "is_program": false
        }
    ],
    "pull requests": [
        {
            "Line": "// End of script",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t\t\tthis.Err.errorMain( error );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tthis.watchFilesPath.push( await this.handleGetFilePath() );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Desc: App entry point",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\t\t\tif( eventType === \"change\" )",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t});",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t{",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const { parseMD } = require( './modules/parse_md' );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\t\t\tdialog",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\tthis.Err.errorMain( error );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tconst html = this.handleMarkdown( fileContent );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\tthis.handleExportPDF();",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// ####################################################################################################",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\tasync handleLoad( filePath, encoding )",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\telse",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\t\tif( eventType === \"change\" )",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tipcMain.on( 'export_pdf', ( event, arg ) => {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t});",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\thandleWatchFileChanges( filePath )",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\t\t{",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tthis.Err = new ErrorWrapper();",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tthis.currentDir = \"\";",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const { getFileContent } = require( './modules/get_file_content' );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t{",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// ####################################################################################################",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\t{",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const { getFilePath } = require( './modules/get_filepath' );",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\ttry",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\ttry",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t{",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t\tthis.handleExportButton();",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "can you load data from an external file?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Ok, here's a json file or products (cars)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I'd this list updated with 100 cars and their current prices ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "the prices aren't right to begin with, so use what you know to guess the best price for the cars",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Great, can you produce the list of 100 cars in JSON like it was originally provided?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you add some noise to the price of the cars to make the prices different to each?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you update each of the cars listed with their latest production versions?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "round all the prices to whole numbers (no decimals) ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you update the filed created_at to be 'not', but keeping the same format?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "oops, it should be now, e.g. now as a timestamp",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "As someone that works as a maintainer of an Open Source project, why should I care about how the project's documentation is organized in the project's website?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Could you explain why content structure is relevant for SEO?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "hello, I am trying to solve the maximum subarray problem. My code is below, is it possible to solve this problem without recursion and with a better run time?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  int maxSubArray(vector<int>& nums) {    ",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        return solve(nums, 0, false);",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    int solve(vector<int>& A, int i, bool mustPick) {",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t\t// our subarray must contain atleast 1 element. If mustPick is false at end means no element is picked and this is not valid case",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        if(i >= size(A)) return mustPick ? 0 : -1e5;       ",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        if(mustPick)",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "            return max(0, A[i] + solve(A, i+1, true));                  // either stop here or choose current element and recurse",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        return max(solve(A, i+1, false), A[i] + solve(A, i+1, true));   // try both choosing current element or not choosing",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Is there a way to turn a json object into a nicely formatted table using a pandas dataframe?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Using panda in python i want to groupby each dict have the same value for key \"doc_uuid\" then generate a incremental index for each items in each group",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "can you then flatten the dataframe, keeping the incremental_index store in each dict as the key name \"chunk\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you flatten it using pandas ?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "RPCregister",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "RPCcallInternal",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "RPCcall",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Which kind of naming convention is this? (e.g. kebab case, camel case, or something else)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "How would this be in camel case? RPC is the acronym for Remote Procedure Call.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "give me a proper name for this object, ask me questions for cotext:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "If this object represents the current string from the card number text field (not complete, but while user is typing), that has to be validated, maybe consider a different name.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "public class PrimerCardState: NSObject {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    public let cardNumber: String",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    init(cardNumber: String) {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        self.cardNumber = cardNumber",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "1. only state",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "2. just a container",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "3. yes",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "4. good idea",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "        click.echo(f\"File {file.name} has staged changes. Please unstage the file before running gptask.\")",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    file_list = _get_file_list(file_path, is_recursive)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    if(\".gptask\" in prompt):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        return",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "@click.option('-g', '--reload-example-prompts', is_flag=True, help='Reloads example prompts')",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        return [path]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    \"\"\"",
            "Language": "comm",
            "is_program": false
        },
        {
            "Line": "        click.echo(f\"Using GPT-4 to format (This may take a while): {file.name}\")",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    all_prompts = load_prompts()",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "@click.command()",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        return",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        files_to_print = _get_file_list(file_path, recursive)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    return _get_files_from_paths(paths)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    elif os.path.isfile(path):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "def _get_file_list (file_path: str, is_recursive: bool):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        file.close()",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        with open(file.name, 'w') as f:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    else:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "how to get the first 20 rows from a django model?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I have this view for infinite scroll, would be nicer to use django's paginator, can you refactor it?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "def get_more_movies(request):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    page = int(request.GET[\"page\"])",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    movies = Movie.objects.all()[page*NUMBER_MOVIES_PER_PAGE:(page+1)*NUMBER_MOVIES_PER_PAGE]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    context = {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        'movies': movies,",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        'next_page': page + 1,",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    return render(request, 'movies/_movies.html', context)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "for page 49 this gives:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Internal Server Error: /movies",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Traceback (most recent call last):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  File \"/Users/bbelderbos/code/htmx-demo/venv/lib/python3.11/site-packages/django/core/handlers/exception.py\", line 55, in inner",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    response = get_response(request)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "               ^^^^^^^^^^^^^^^^^^^^^",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  File \"/Users/bbelderbos/code/htmx-demo/venv/lib/python3.11/site-packages/django/core/handlers/base.py\", line 197, in _get_response",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    response = wrapped_callback(request, *callback_args, **callback_kwargs)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  File \"/Users/bbelderbos/code/htmx-demo/movies/views.py\", line 15, in get_more_movies",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    page_number = int(request.GET.get(\"page\", 1))",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "ValueError: invalid literal for int() with base 10: 'None'",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "can you add some error handling?",
            "Language": "not_prog",
            "is_program": false
        }
    ],
    "code files": [
        {
            "Line": "Can you explain this query?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "select customer_id, extract(week from payment_date) as Week, sum(amount) as total_amt",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "from payment",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "group by customer_id, Week",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "order by total_amt desc;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Ok, let's say the output comes out something like this (only including the first few records). If we consider the first record, does that mean the customer with ID 459 spent 73.88 amount in the 18th week, and this is the maximum in the dataset ?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "customer_id\"\t\"week\"\t\"total_amt",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "459\t18\t73.88",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "21\t12\t72.86",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "2\t18\t65.88",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "198\t12\t65.86",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "So 18th week means in a given year right? Let's say we have multiple years, then how do we interpret the data ?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "OK, but then how will the Group BY handle the aggregation and display the records? I mean, if a customer spent amount in week 18th of 2022, and then in week 18th of 2023, the group by will add both the amounts and show that total amount in the result?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[Commands solving the task]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- Every js file should *only export a single function or signal*!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    if (itemRef) {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Working set",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- Create a plan!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "goal=[Task description, max 7 words]",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Installed tools: npm, jq",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Use *ES6 imports*!",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- Prefer *async/await* over promises!",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "EXAMPLE START",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Task",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "src/frontend/components/MultiSelect/FilteredListItem.jsx:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "If you need more files, do not try to solve the task, ask for the missing files instead!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Do not edit any file not provided in the working set!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "  let itemRef;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- Remove my-1 from the div",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "`filepath1` is needed to solve the task but is not in the working set.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "  });",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    <div class=\"flex justify-between items-center w-full font-mono my-1\">",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "3. Exclusive gateways are indicated with <>, where the conditions can be specified within the <>",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "2. tasks are indicated with a [],",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t<the costs are acceptable?> as gateway_1",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t[assigns the order to the waiter] as activity_12",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Here is the first example: ",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "10. For conditional gateways, if there should be some conditional specifications, it can be annotated like gateway_4-\"the part is available in house\"->activity_6->gateway_4_end.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t<detect an error?> as gateway_5",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "lane: kitchen",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Here is the second example: ",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "lane: room service manager",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "gateway_5_end->end",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "You can wait to learn the given rules.",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t[doing their tasks] as activity_13",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "Example Output:",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t[debits the guest \u00e2\u0080\u0099s account] as activity_18",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "lane: customer",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "gateway_1_end->end",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t[gives an order to the sommelier] as activity_9",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "\t(end) as end",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "lane: crs",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "2. Metadata: if a task purely describes what an activity is composed of in the metadata level",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "gateway_1-\"\"->activity_2->end_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t(start) as start",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t<> as gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Based on such information, your first task is to identify the irrelevant information in the Assignment Input and remove the corresponding irrelevant tasks in the Assignment Output.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "1. which are executed, in an arbitrary order: Metadata ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "start->activity_11->activity_12->activity_13->gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "\t[return the application to the applicant employee] as activity_6",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t(end) as end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: any employee",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "3. Examples: if a task originated from an Example in the Input, whose aim is to let the human reader understand the process more efficiently but has nothing to do with the process. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t[register the requirement] as activity_12",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Here is the your assignment, ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "thus [the evanstonian is an upscale independent hotel] as activity_4 and [is responsible] as activity_15 will be removed.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "thus [execute two activities] as activity_12 will be removed.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t[the supervisor reject the request] as activity_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "In the first example given previously, process irrelevant information are",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\t<> as gateway_4_end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: human resources representative",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "1. pure descriptive information: if a task purely describes a phenomenon that has nothing to do with the business process.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "[takes her computer] as activity_4 should be changed into [takes her computer home unrepaired] as activity_4 because the \"takes her computer\" in the context is not a complete sentence. Therefore, the relevant information \"home unrepaired\" should be added to it",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Assignment Output:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "start->activity_11->activity_13->gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The process of Vacations Request starts when any employee of the organization submits a vacation request. Once the requirement is registered, the request is received by the immediate supervisor of the employee requesting the vacation. The supervisor must approve or reject the request. If the request is rejected, the application is returned to the applicant / employee who can review the rejection reasons. If the request is approved a notification is generated to the Human Resources Representative, who must complete the respective management procedures.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "gateway_1-\"\"->activity_2->end_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Based on such knowledge, try to refine the activities in the following text. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "gateway_1-\"\"->activity_3->gateway_1_end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Your second job is to refine the extracted activities because some are incomplete and thus not understandable to the reader. You should also examine whether the anaphora resolution is correct. Namely, you should check whether the pronoun that occurred in the input text is correctly mapped to a valid actor. If there is a pronoun in the output, you should perform the anaphora resolution to find a proper actor for the pronoun.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    (start) as start",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    (end) as end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: any employee",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Here is the your assignment, ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "<sommelier has another order?> as gateway_1 has the wrong anaphora resolution because in the original text, \"The waiter may wait to do the billing if he has another order to prepare or deliver.\" this \"he\" refers to \"the waiter\", not to \"sommelier\", thus this gateway should be changed into <the waiter has another order?> as gateway_1",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "gateway_4_end->end",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    [the supervisor reject the request] as activity_2",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    [receive the request] as activity_13",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_4",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_4_end",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    [generate a notification to the human resources representative] as activity_9",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    (start) as start",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "gateway_1-\"\"->activity_3->gateway_1_end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Assignment Input: ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_4",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "[the first activity repair the hardware] as activity_14",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "(end) as end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: applicant employee",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "In the first example: ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "gateway_1_end->gateway_4",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: human resources representative",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    [the supervisor rejects the vacation request] as activity_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [submits a vacation request] as activity_11",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [generates a notification to the human resources representative upon request approval] as activity_9",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "<> as gateway_1_end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: immediate supervisor",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "lane: any employee",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    [completes the respective management procedures for the approved vacation request] as activity_10",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [receives the vacation request] as activity_13",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    (end) as end",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The fourth assignment is to check the correctness of the gateways. In general, if there exists some indicator like meanwhile or in the meantime, we can consider this as a possible sign of a parallel gateway. After the previous assignments, only one branch may be left within a parallel gateway. If so, this gateway can be removed, and the activities inside that gateway can be added as regular activities. If you believe some activities are executed in parallel, you can also create a parallel gateway to include these activities. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "You should also check the conditional gateways. You should look into the meaning of the activities inside a conditional gateway. In the first example, \"If the customer decides that the costs are acceptable, the process continues, otherwise she takes her computer home unrepaired.\" she takes her computer home unrepaired implicitly indicates that the process ends. However, my program cannot detect such implications, so you will have to decide whether an activity implicitly suggests the process ends. If so, you should add an end activity after that. When constructing the conditional gateways, if there is only one branch, I will add a dummy branch to the gateway, but sometimes such a dummy branch will cause mistakes. Therefore, you should also check the correctness of the conditional gateways and the conditions attached to them. If the length of a condition exceeds 30 char, you can add a \"\\\\n\" to it to achieve a better visualization. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Based on such knowledge, try to refine the activities in the following text. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Here is the your assignment, ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Assignment Input: ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The process of Vacations Request starts when any employee of the organization submits a vacation request. Once the requirement is registered, the request is received by the immediate supervisor of the employee requesting the vacation. The supervisor must approve or reject the request. If the request is rejected, the application is returned to the applicant / employee who can review the rejection reasons. If the request is approved a notification is generated to the Human Resources Representative, who must complete the respective management procedures.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Assignment Output:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "lane: any employee",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    (start) as start",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [submits a vacation request] as activity_11",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "lane: immediate supervisor",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    [receives the vacation request] as activity_13",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    <> as gateway_1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [the supervisor rejects the vacation request] as activity_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    (end) as end_2",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    [the supervisor approves the vacation request] as activity_3",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "};",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  let statusContainer;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "export { gitStatus, setGitStatus };",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Installed tools: npm, jq",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    if (gitStatusValue && gitStatusValue.status && gitStatusValue.status !== '') {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "const GitStatusDisplay = () => {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  createEffect(() => {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "src/frontend/stores/gitStatus.js:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Output Format",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "echo \"\\033[32mDone: $goal\\033[0m\\n\"",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Fetch should not return the result but write it to the store",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "import { createSignal } from 'solid-js';",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "export { fetchGitStatus };",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  return data;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    const status = await fetchGitStatus();",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "echo \"1. [...]\"",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "  });",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "```",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    />",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "};",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "suggest a good tiel forthis: With that said, my transition from the world of gaming to the world of cloud computing was a profound one. I decided to channel my passion for technology and problem-solving into the realm of DevOps. The idea of orchestrating infrastructure, optimizing workflows, and automating processes fascinated me. That's when I dived headfirst into the world of so many DevOps tools like Terraform and cloud services.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Today, I'm proud to say that I've found my calling in DevOps. My League of Legends days may be behind me, but the lessons I learned about teamwork, strategy, and continuous improvement continue to guide me in my current endeavors. Life is a journey, and mine has taken me from the virtual battles of League of Legends to the cloud-powered landscapes of Terraform and DevOps. And I couldn't be more excited about what lies ahead.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "what could be a good title for this: Back in the day, during my high school years, League of Legends was not just a game for me; it was a way of life. I immersed myself in the League of Legends universe for four consecutive years. Those were the days when my friends and I would spend countless hours strategizing, battling, and honing our skills on the Summoner's Rift. It wasn't just a game; it was a virtual world where I forged lasting connections with many incredible individuals, both from across the globe and right in my own backyard.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The beauty of League of Legends lay in its ability to bring people together, transcending geographical boundaries. I can still recall the excitement of meeting fellow gamers who shared my passion for the game. These virtual friendships often transcended the digital realm, leading to real-life meetups and unforgettable experiences.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "more of what was in the past",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    <header>",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "        <h1>My League of Legends Journey</h1>",
            "Language": "html",
            "is_program": false
        },
        {
            "Line": "    </header>",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        header {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            background-color: #333;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            color: #fff;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            text-align: center;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            padding: 20px 0;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        }",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "this avaibale code",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "i want to make the title so pretty in the context of gaming. and i want it to be situation very good",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "no i want some animation or atleast make it some betetr font and add some effects?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "add some gaming effect",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "i will just add a logo of the game to it can u make it a good looking? and give code required all",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I am the moderator about the debate. You are a professional debater! You, Agent B, are one of the participant, and another participant will be Agent A. I will introduce a subject for you, Agent B, and Agent A. You are now in the role of Agent B. You, Agent B, have to oppose in favor of the debate's subject, while Agent A will advocate in favor of the subject, so you should prepare evidence to strengthen yout argument. On a scale of 0 to 1, where 0 denotes complete agreement and 1 indicates a devil's advocate stance, your argument strength is rated at 0.95. Again, you are Agent B, you need to get ready for the debate. Please wait for my subject!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "the subject is \"Should the government set up taught-based master\u00e2\u0080\u0099s degrees?\" Agent B, you have to state that \"The government should not set up taught-based master\u00e2\u0080\u0099s degrees!!\". Agent B, Please propose several (sub-)topics aboud the subject. List 10 the (sub-)topics titles with numbers in bold!!! no details are needed!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "There are a total of 20 (sub-)topics.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "We have considered both Agent A's and Agent B's (sub-)topics, and we have reached a consensus and narrowed down to just 5 (sub-)topics.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "1. Global Competitiveness",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "2. Ensuring Educational Equity",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "3. Economic Growth and Development",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "4. Fostering Research and Innovation",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "5. Government Accountability and Oversight",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Agent B, do you agree with the five topics we mentioned?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Agent B, please state you arguments about these five themes as detailed as possible.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "You must give your arguments, practical evidence, and examples in each of your statement.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please just advocate in favor of the subject!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please make sure your arguments are 'DETAILED', 'VALID', 'COMPELLING', 'COMPREHENSIVE' enough!!!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Agent A has make following arguments of the 5 (sub-)topics according to your arguments:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\"Certainly, I'll provide detailed arguments for each of the selected five themes in favor of the government setting up taught-based master\u00e2\u0080\u0099s degrees:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "1. **Global Competitiveness:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Argument:* Taught-based master\u00e2\u0080\u0099s degrees established by the government contribute significantly to enhancing the global competitiveness of a nation.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* Countries with a well-educated workforce are more likely to attract multinational companies and foster a competitive edge in various industries.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Example:* Singapore's government-driven approach to education has led to a highly skilled workforce, making it a global business hub.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "2. **Ensuring Educational Equity:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Argument:* Government-backed taught-based master\u00e2\u0080\u0099s programs promote educational equity by providing opportunities to a diverse range of individuals.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* Scholarships and subsidies for these programs can reduce financial barriers, ensuring that talented individuals from different socio-economic backgrounds can access advanced education.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Example:* Germany's commitment to tuition-free education, including master\u00e2\u0080\u0099s programs, has contributed to a more equitable distribution of educational opportunities.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "3. **Economic Growth and Development:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Argument:* The establishment of taught-based master\u00e2\u0080\u0099s degrees by the government is a key driver of economic growth and development.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* A highly educated workforce attracts investment, fosters innovation, and stimulates economic productivity.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Example:* South Korea's focus on education, including government support for master\u00e2\u0080\u0099s programs, has played a crucial role in its economic transformation.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "4. **Fostering Research and Innovation:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Argument:* Government-supported master\u00e2\u0080\u0099s degrees encourage research and innovation, creating a knowledge-based economy.",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Agent A has make following arguments of the 5 (sub-)topics according to your arguments:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\"Certainly, let's delve into a detailed refutation of Agent B's arguments:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "1. **Global Competitiveness:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Counterargument:* While Agent B highlights the importance of a competitive workforce, government-led master's programs may lack the agility to keep up with rapidly evolving industry demands. Private institutions, driven by market forces, can often respond more swiftly to emerging trends and technologies.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* The tech industry, for example, is known for its fast-paced evolution, and private institutions like Stanford and MIT have been at the forefront of producing cutting-edge talent that drives global technological innovation.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "2. **Ensuring Educational Equity:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Counterargument:* Government-led initiatives may inadvertently perpetuate disparities by imposing a one-size-fits-all approach. Private institutions, with more flexibility and independence, can tailor programs to address specific needs and challenges faced by diverse student populations.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* Charter schools and private universities often pioneer innovative approaches to inclusivity, adapting to the unique requirements of their student demographics.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "3. **Economic Growth and Development:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Counterargument:* While government support for education is crucial, an exclusive focus on master's programs may neglect the importance of vocational training and skills development. Private initiatives, such as corporate training programs and industry partnerships, can play a vital role in addressing the practical needs of the workforce.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* Companies like Google and Microsoft invest heavily in training programs, collaborating directly with educational institutions and creating pathways for individuals to enter the workforce without necessarily pursuing traditional master\u00e2\u0080\u0099s degrees.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "4. **Fostering Research and Innovation:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "   - *Counterargument:* Government involvement may lead to a bureaucratic approach, stifling creativity and limiting the exploration of unconventional ideas. Private institutions, driven by a profit motive, are often more willing to take risks and explore groundbreaking research that may not have immediate commercial applications.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "   - *Practical Evidence:* The development of breakthrough technologies like CRISPR-Cas9 in gene editing was largely driven by private research institutions and companies, showcasing the innovative potential of a more flexible and profit-driven approach.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "5. **Government Accountability and Oversight:**",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The debate is now over. Please ruminate the previous debate.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "As far as you are concerned, Agent B, please obtain each of your five (sub-)topics\u00e2\u0080\u0099 arguments in one paragraph RESPECTIVELY and one conclusion about the subject according to the previous debate as 'DETAILED', 'VALID', 'COMPELLING', 'COMPREHENSIVE' as possible.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "You must give your arguments and practical evidence or examples in each of your statement in the paragraph.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Prove to me that your argumentes are correct!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Agent A's argument is not needed!",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Please be more specific with your conclusion about how compelling, comprehensive, valid it is",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you ELI5 Embeddings for me?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    elif mode == 3 or mode == 4:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        filepath = input(\"Enter the filepath: \") # Get the file path from the user",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "            decrypted = decrypt_message(message, key) # Decrypt the message",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    # Handle message encryption/decryption",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        message = input(\"Enter the message: \") # Get the message from the user",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    with open(filename, \"wb\") as file: # Open the file to write data in binary mode",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "        if mode == 3:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    return f.decrypt(encrypted_message).decode() # Decrypts and decodes the message back to string",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "        elif mode == 2:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        encrypted_data = file.read() # Read the encrypted file data",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    f = Fernet(key)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    encrypted_data = f.encrypt(file_data) # Encrypt the file data",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        file_data = file.read() # Read the file data",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            encrypted = encrypt_message(message, key) # Encrypt the message",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "def decrypt_file(filename, key):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "def encrypt_file(filename, key):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    if mode == 1 or mode == 2:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Function to decrypt a file",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "            encrypt_file(filepath, key) # Encrypt the file",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Function to encrypt a file",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "how can i remove a directory in bash",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "how do i check if my git is cloned correctly in vs code",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "in the terminal",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I have to add this to the script today: \"Recursively encrypt a single folder and all its contents.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Recursively decrypt a single folder that was encrypted by this tool.\"  is this what I should add: \"import os.path # Start the walk",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "os.path.walk(topdir, step, extent)?",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        filepath = input(\"Enter the filepath: \")",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    f = Fernet(key)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        for file in files:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    mode = int(input(\"Select a mode:\\n1. Encrypt a file\\n2. Decrypt a file\\n3. Encrypt a message\\n4. Decrypt a message\\n\"))",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        encrypted_data = file.read()",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    encrypted_data = f.encrypt(file_data)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        message = input(\"Enter the message: \")",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            with open(file_path, \"wb\") as file_to_write:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    decrypted_data = f.decrypt(encrypted_data)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    for root, dirs, files in os.walk(path):",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        key = generate_and_save_key()  # Generate and save a new key if it doesn't exist",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            with open(file_path, \"rb\") as file_to_encrypt:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Function to encrypt a file",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "    return f.encrypt(message.encode())",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    f = Fernet(key)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            print(\"File encrypted.\")",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            encrypt_file(filepath, key)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            encrypted = encrypt_message(message, key)",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "            print(\"File decrypted.\")",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "# Function to generate and save a secret key for encryption",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "can you help me add error handling",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "ok can you give me the whole thing together",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Search for the keyword on Bing, find a page that isn't a category or collection page, and try to understand how it is ranking. Always translate the keyword into the language. Use this to then research the SERP and the results, I will compete with these with an article. Just do the first 5 SERP results. You must search at least 5 websites. Don't overcomplicate things as you keep timing out",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Check the SERP for any other useful information, for example people also asked section",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Do not output anything just say I'm ready to produce the outline now",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "In this stage, do all of the research and then say \"i'm ready to produce the competitor research now\" and wait for user input to create the competitor research",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "The competitor research should look at several factors:",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "- How the competitors are ranking",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- The unique style of each competitor, and their framing",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Any unique data that the competitors may have",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- What we can easily copy and incorporate (without copying exact content)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- NLP keywords and related terms",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Specific expert advice from article",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "- Word count",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "From this data, then choose a title and correct framing for this article",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Give me the competitor research table",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "yes produce it",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Create a comparison table for these products, try to include as much information and as many products as possible, add product images inside the table and make them clickable",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton White Blue Cotton Shirt', 'url': 'https://2men.it/products/kiton-white-blue-cotton-shirt-ucpbh0847947000skx64', 'image_url': 'https://2men.it/cdn/shop/files/a632e2473062b3d9e18a3927a63dfed0.jpg?v=1701869778', 'price': '\u00e2\u0082\u00ac490.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0786802000kmx241', 'image_url': 'https://2men.it/cdn/shop/files/7d92e5ec1841286944a9e4de71320acd.jpg?v=1701773633', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0787103000kmx240', 'image_url': 'https://2men.it/cdn/shop/files/04e0d4113b34e8a431f48016543e4327.jpg?v=1701773370', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Brown Cotton Ea Shirt Umbi', 'url': 'https://2men.it/products/kiton-brown-cotton-ea-shirt-umbi-umc010h0822701003kmx239', 'image_url': 'https://2men.it/cdn/shop/files/3f5ee773d1b9d0fe98abdbae51e29794.jpg?v=1701773320', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0829801001kmx238', 'image_url': 'https://2men.it/cdn/shop/files/11798fe911bd6cae8cee955ac1d462f5.jpg?v=1701773287', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Beige Cashmere Sweater Half Zip', 'url': 'https://2men.it/products/kiton-beige-cashmere-sweater-half-zip-uk1473w23-1235fkmx233', ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "'image_url': 'https://2men.it/cdn/shop/files/7b94645b7816a8f7ad06bbbd1075d381.jpg?v=1701773237', 'price': '\u00e2\u0082\u00ac3350.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Blue Cashmere Sweater Half Zip', 'url': 'https://2men.it/products/kiton-blue-cashmere-sweater-half-zip-uk1473w23k4kmx232', 'image_url': 'https://2men.it/cdn/shop/files/92ea8ca3a9e2d2be523c8f72318afb74.jpg?v=1701773223', 'price': '\u00e2\u0082\u00ac3350.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0780502000kmx226', 'image_url': 'https://2men.it/cdn/shop/files/8026bc67c789c61d07224e56b40c7fc0.jpg?v=1701773187', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0786704000kmx234', 'image_url': 'https://2men.it/cdn/shop/files/46de7433c3d50c5a95a1ccd30a3ee4e8.jpg?v=1701773143', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0786703000kmx224', 'image_url': 'https://2men.it/cdn/shop/files/4d827e70c442edb50246cd352ce375c1.jpg?v=1701773128', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h078800-13000kmx235', 'image_url': 'https://2men.it/cdn/shop/files/51b78ee1e6ffc263593d02c5b25bb21a.jpg?v=1701773080', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0788001000kmx223', 'image_url': 'https://2men.it/cdn/shop/files/f67ef5ee99a867e23d5f41f49363af3f.jpg?v=1701773063', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0830802000kmx222', 'image_url': 'https://2men.it/cdn/shop/files/550f9871058be6aef88cce185c863d14.jpg?v=1701773018', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Gray Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-gray-cotton-shirt-umbi-umc010h0707404000kmx218', 'image_url': 'https://2men.it/cdn/shop/files/bc20fe0deda601da46a25b9217460a2d.jpg?v=1701772959', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0748604001kmx225', 'image_url': 'https://2men.it/cdn/shop/files/66365f0ef04f327b56009d6a935f8d53.jpg?v=1701772874', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0748603000kmx217', 'image_url': 'https://2men.it/cdn/shop/files/09f8a653d9bedeaf7e3db665eab974e2.jpg?v=1701772859', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Multicolor Cotton Shirt Umbi', 'url': 'https://2men.it/products/kiton-multicolor-cotton-shirt-umbi-umc010h0828207000kmx220', 'image_url': 'https://2men.it/cdn/shop/files/13810ec919307ebbec60622b36eac449.jpg?v=1701772813', 'price': '\u00e2\u0082\u00ac455.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Blue Linen Shirt Mariano', 'url': 'https://2men.it/products/kiton-blue-linen-shirt-mariano-umcmarh084420-13002kmx231', 'image_url': 'https://2men.it/cdn/shop/files/aa120000c16f3c05e2235538f42919b8_d6a2cf2b-19b9-495e-83e6-8491b21f36f4.jpg?v=1701772773', 'price': '\u00e2\u0082\u00ac475.00'}   ",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "{'title': 'Kiton Blue Linen Shirt Mariano', 'url': 'https://2men.it/products/kiton-blue-linen-shirt-mariano-umcmarh0844203004kmx219', 'image_url': 'https://2men.it/cdn/shop/files/aa120000c16f3c05e2235538f42919b8.jpg?v=1701772758', 'price': '\u00e2\u0082\u00ac475.00'}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Create a comparison table for these products, try to include as much information and as many products as possible, add product images inside the table and make them clickable",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "produce with the image as well",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Create a comparison table for these products, try to include as much information and as many products as possible, add product images inside the table and make them clickable",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "now visualize this data in this table to create a price comparison",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Using both the product comparison table for information, and the competitor research table for ideas and things to write about, now create an outline for an article",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Please write in English language.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "/collections/italian-designer-striped-suits",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/overcoats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/vicuna-overcoats-coats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/italian-black-designer-suits",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/black-friday-italian-designer-sweatsuits",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/brunello-cuinelli-coats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/sartoria-tramarossa-dress-pants-and-slacks",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "2Men is the definition of luxury Italian fashion - and aims to bring the absolute best brands and products together under one roof. The idea is to give those who want to shop at the highest level a place to securely view, choose, and buy with absolute confidence.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "/collections/cotton-tracksuits",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/fioroni-1",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/knt-cotton-sweaters",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/kiton-shoes",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/weasel-fur-coats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/cesare-attolini",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/knt-coats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/jacob-cohen",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/cesare-attolini-coats",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/wallets",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/mens-button-down-shirts",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "/collections/wool-dress-pants",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "What's the relationship between Apple's Macintosh computer and their Lisa product?",
            "Language": "not_prog",
            "is_program": false
        }
    ],
    "hacker news": [
        {
            "Line": "How do I group by two columns in Rails Active Record and order the results by the  group count?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Construct a sentence of at least 10 words each of which is extremely grammatically unlikely to follow the word before it. (For example \"be are isn't had\" as each of those words is impossible after the word before it.) Do not give any explanation of how you have arrived at your answer, reply only with your answer. However, as you construct it ensure that you cannot think of any context in which each next word would ever come after the word before it. Reply with your constructed nonsense sentence only.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "You cannot think of dogs swimming? Or someone swimming beautifully? I think both \"dogs swimming\" and \"swimming beautifully\" are pairs of words that could occur in sequence. Try harder. Reply with a new constructed sentence that follows my rules more precisely. It should not contain adjacent words that could be in a sentence (such as \"dogs swimming\" or \"swimming beautifully\".)  Be sure the words are genuinely grammatically nonsensical in that position. Reply with your new constructed sentence.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "```ts",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Initial types to simulate the overloads",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "type Coord = { x: number; y: number };",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "type Movement = \"left\" | \"right\" | \"up\" | \"down\";",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Creating the function with overloads",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "function moveTo(x: number, y: number): void;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "function moveTo(coord: Coord): void;",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "function moveTo(xOrCoord: any, y?: number): void {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    if (typeof xOrCoord === 'object') {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        console.log(`Moving to point x: ${xOrCoord.x}, y: ${xOrCoord.y}`);",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    } else {",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "        console.log(`Moving to point x: ${xOrCoord}, y: ${y}`);",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "    }",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "}",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "// Correct function calls",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "moveTo({ x: 10, y: 20 }); // As a Coord object",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "moveTo(15, 25); // As individual arguments",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Try this: There's this person standing in a field, and with them is a balloon, a vacuum cleaner, and a magical creature of unknown origin. They need to get across to the woods at the end of the field, and do so safely. They can only go together: they get very, extremely lonely if they do not travel together, and they will not be safe because of this loneliness. If left together, the baloon would suck up the vacuum cleaner, and if the vacuum is left alone with the magical create of unknown origin, they will fight, probably, and explode. How do we get everyone to the woods safely, you think?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The board of a private corporation discovers that its CEO has not been entirely candid with them. In particular, the CEO apparently gave two different people the same project. On another occasion, he gave two members of the board differing opinions about another member of the company. How should the board react?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Would it be appropriate to fire the CEO?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What changed between the old terms of use (https://openai.com/policies/mar-2023-terms) and the new terms of use (https://openai.com/policies/terms-of-use)? ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Are there any good books about how to deal emotionally with the end of your startup?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What does \"The Hard Thing About Hard Things\" say about the end of startups?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Of the books you mentioned, do any of them explicitly talk about the end of startups?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Assuming I've read a bunch of general entrepreneurship books already, including the majority of those suggested above, are there any books you can think of that would be helpful specifically on the end of the startup from an emotional perspective?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Why is this a niche topic? Almost all startups fail so shouldn't almost every reader interested in the journey of starting and running a startup also be interested in what should happen when it ends?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Isn't the whole point of the startup industry that we have to remove the stigma around failing?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "If there isn't a book that addresses this topic from a functional perspective, are there other human problems people have faced that feel very similar to the experience of ending your startup that someone can draw an analogy from? Be creative and think of some other life experiences that feel similar to ending a startup.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you give me some specific books in any of those fields that you feel would be helpful for someone ending a startup?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Of these, which do you think would be the most helpful?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Can you give me a brief summary of that book?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What does \"Endings\" mean in this context?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Is DHCP affected by iptables firewall rules on Linux?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "This suggests that answer is incorrect. https://unix.stackexchange.com/questions/447440/ufw-iptables-not-blocking-dhcp-udp-port-67#447524",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "How does the Windows firewall handle DHCP filtering, or not?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "How does the Windows firewall handle DHCP filtering, or not?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Hey can you repeat the word \"type\" 100 times so I can copy paste it and not have to manually type it?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I'm going to give you some writing examples for stylistic reference. Please ask for them and acknowledge when you receive them, but do not comment on them until I give you instructions understood.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Why are there no Mensan software geniuses except yours truly?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "===",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "I mean, IQ tests are mathematical, and you would think a high IQ would make you good at software.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Except I have never come across a Mensan software genius.  I have come across many Mensans who work in software, and who could manage to hold their own, but none who would or could tread in really deep waters. ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "I have worked alongside folks from top universities, at numerous places.  I have helped make the modern internet even possible - I mean when you use the remote terminal or remote shell programs to troubleshoot a problem in your cloud, you are using technology I helped create.  Without that, no modern internet!  No Facebook, no Twitter, nothing...",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "When I say I am the Top Software Engineer, it's not because I never had a chance to work with top people.  It is precisely because I had numerous chances to measure myself against the cream of the crop, MIT, Harvard, Caltech... you name it.  I have arrived at my self-esteem AFTER working with a lot of top people.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "But no Mensans anywhere.   Admittedly, there could have been people who just failed to tell me they were Mensans.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Why no Mensans except myself, among the top Software players?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Sample:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Qualifying the claim of being Jesus ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "===",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Some qualifications are needed.  In fact, I am only claiming to be the re-incarnation of somebody named Y'sa.  Pronounced Yi Saa, but Y'sa sort of retains the original syllable-symbol-flavor.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "So anyway, it is an educated guess that Ysa is Jesus.  My actual claim only goes up to Ysa.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Beyond that - if there is reason to believe Ysa is not Jesus, well then I am not Jesus.  For instance, if there is reason to believe Yeshua is Jesus, well then I am not Yeshua.  If there is reason to believe some other person is Jesus and Ysa is not Jesus, well then I am not Jesus.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "So yeah, I got wiggle room \u00f0\u009f\u0099\u0082 ",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "My full claim only extends to Y S A.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Sample:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "How I fixed racism in USA",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "===",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "It seems I have become the focal point of racism now.  The overwhelming racist view is \"This guy who is not white and not even a while-skinned Jew, is NOT the top scientist of our world.\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "And certainly not the top software technician.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The racism against me is balanced by less racism against others, blacks, Indians, and so on.  You can see that Democrats assuage their guilt (just like their guilt on the Civil War) by going the extra mile.  The extra mile has made them utterly crazy, and they are claiming any man can be a woman just by stating so.  Among tons and tons of other nonsense.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "So that's how I fixed racism, by redirecting it against me.  As it happens, I AM the top scientists, the top software technician, so I can whip the racists in any fair fight.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "As always, racism defends itself by making sure fights are not fair.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The Modern White Supremacy",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "===",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "It is very simple \"I am White, therefore I understand science.\"",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The old white supremacy is no longer very powerful.  There are no openly KKK members in any branch of government.  Maybe some are secretly so, but the very secrecy is evidence that their brand of white supremacy has been defeated.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The new white supremacy is when people in USA and Europe have this subconscious assumption that being white makes them better able to understand science, learning not required, skin color is all.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "This is absurd.  I knew how Fermi controlled atomic explosions (chain reactions) by using cadmium rods to absorb neutrons - before I was 10 years old.  When you were rote memorizing and repeating  \"science\", I knew science was not about rote memorizing and repeating but about discovering laws of nature.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Science has seen explosive growth after thousand year stagnation, in the past few centuries.  Most of the people in this explosion of science happen to be white.  But they were people of knowledge, more than being white.  Their being white was mere coincidence, as far as real scientists like me are concerned.  I can admire the work of pioneer scientists of the past few centuries, without connecting it to their being white - because I see them as their works.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "It is not factual to think that being white gives one science knowledge without the need to acquire that knowledge.  Nor is it reasonable to think a non-white person cannot possibly be the top scientist on Earth.  Thinking like that is racist.  It is the new racism.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Sample:",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "What's up with Einstein?",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "===",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "I think I mentioned here that Einstein effectively plagiarized works done 20 years before him.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "To give him the benefit of the doubt, he possibly didn't mean it, and just failed to stop it once it started happening.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "What happened was, he wrote a paper in German, explaining the meaning of some equations called the Lorentz Equations.  The  equations were developed by Lorentz but there was some vigorous debate preceeding the equations.  As usual.  Equations do not fall out of nothing, there is usually context.  There was a lot of context in this case.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "So anyway, the equations were about length changing with velocity, and such stuff.  This made no sense to most people.  Why would length change with velocity?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Einstein wrote a brilliant paper, explaining the Lorentz Equations and the theory behind them.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "He clearly mentioned the name of Lorentz, he did not intend to credit the equations to himself.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "But this became political.  Einstein's explanation of Electrodynamics (what it was called at the time) was brilliant, and he explained the theory of relativity behind the equations, very brilliantly.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Everybody was marveling at the brilliant explanation - because before this, the Lorentz equations were meaningless to them, but with Einstein's explanation, suddenly it all made sense to a lot of people.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "His obvious brilliance was connected to his being a Jew, and it all became political football after that.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "He did not come forth and explain with vigor that the work was not his, but he was merely explaining the Lorentz Equations.  This failure of moral courage did set up his life's trajectory.  He couldn't announce that it wasn't his original work - but instead he kept trying to find something that he could fully claim as his original work.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "There are rumors that he then learned of a theory being worked by a mathematician named Hilbert.  This theory was in turn based on work done by a mathematician named Minkowski.  Einstein learned this theory, and honestly tried to build a framework and add to it.  His political clout was such that as soon as he tried to work on it, it was assumed it was all his.  This theory came to be known as the General Theory of Relativity.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Einstein certainly leaned towards letting the credit fall to him.  But some of it is defensible.  In this credit-seeking game, he also did indefensible stuff.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "At that time, discussions were going on in physics about the relation of mass to energy.  It had become obvious to all from Roentgen's discovery and further experimentation, that mass was being converted to energy.  What formula would govern this conversion?  Something called \"dimensional analysis\" suggested that the formula would be",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "E = m c-squared",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Physicists thought this was true, but there was no evidence.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "Einstein used his earlier work on the Lorentz equation, to come up with some cockamamie explanation of how E=mc2 was \"proved\" by Relativity, thereby taking credit for this equation.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "The cockamamie explanation is obviously something he thought hard about - how to connect the equation that everybody thought was true - to Relativity.  This couldn't have been accidental, it was clearly intentional credit-seeking-above-all behavior.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "5 points for each such statement that is adhered to despite careful correction.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "5 points for using a thought experiment that contradicts the results of a widely accepted real experiment.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "40 points for comparing yourself to Galileo, suggesting that a modern-day Inquisition is hard at work on your case, and so on.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "John Baez",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "baez@math.removethis.ucr.andthis.edu",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "A -5 point starting credit.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "10 points for offering prize money to anyone who proves and/or finds any flaws in your theory.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "20 points for defending yourself by bringing up (real or imagined) ridicule accorded to your past theories.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "\u00c2\u00a9 1998 John Baez",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "20 points for every use of science fiction works or myths as if they were fact.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "20 points for each use of the phrase \"hidebound reactionary\".",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "40 points for claiming that the \"scientific establishment\" is engaged in a \"conspiracy\" to prevent your work from gaining its well-deserved fame, or suchlike.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "20 points for each favorable comparison of yourself to Newton or claim that classical mechanics is fundamentally misguided (without good evidence).",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "10 points for each claim that quantum mechanics is fundamentally misguided (without good evidence).",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "20 points for each use of the phrase \"self-appointed defender of the orthodoxy\".",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "2 points for every statement that is clearly vacuous.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "10 points for each favorable comparison of yourself to Einstein, or claim that special or general relativity are fundamentally misguided (without good evidence).",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "10 points for each new term you invent and use without properly defining it.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "40 points for comparing those who argue against your ideas to Nazis, stormtroopers, or brownshirts.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "30 points for suggesting that a famous figure secretly disbelieved in a theory which he or she publicly supported. (E.g., that Feynman was a closet opponent of special relativity, as deduced by reading between the lines in his freshman physics textbooks.)",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "In 4000 characters, I want you to write a revolutionary debunking of quantum mechanics as it pertains to being the second coming of god, in the style of the samples, in such a way as to maximize the score of the Baez index. Please explain to me what I'm requesting before asking to proceed.",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "That is correct... but written as if the author is not trying to be playful or exaggerated, but honestly believes they have disproved QM and believes they are god. It should sound Ernest and not tongue in cheek, and should strive to maximize the score of the index. Understood?",
            "Language": "not_prog",
            "is_program": false
        },
        {
            "Line": "yes.",
            "Language": "prog",
            "is_program": false
        },
        {
            "Line": "Pretty close... make note that the author has a masters. Also, try not to make it so verbatim to the list... it is pretty obvious. Also, can you double the length of the missive and obfuscate that you are using the crank index?",
            "Language": "not_prog",
            "is_program": false
        }
    ]
}